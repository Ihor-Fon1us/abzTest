openapi: 3.0.3
info:
  title: Swagger Users - OpenAPI 3.0
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: token
  - name: users
  - name: positions
paths:
  /token:
    get:
      tags:
        - token
      summary: Get token
      operationId: getToken
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                    success:
                      type: boolean
                      default: true
                    page:
                      type: string
  /users:
    get:
      tags:
        -users
      summary: Get users
      operationId: getUsers
      parameters:
        - name: page
          in: query
          description: Specify the page that you want to retrieve
          required: false
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Specify the missing record number
          required: false
          schema:
            type: integer
            minimum: 0
        - name: count
          in: query
          description: Specify the amount of items that will be retrieved per page
          required: true
          schema:
            type: integer
            default: 5
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                    success:
                      type: boolean
                      default: true
                    page:
                      type: integer
                      minimum: 1
                    total_pages:
                      type: integer
                      minimum: 1
                    total_users:
                      type: integer
                      minimum: 0
                    count:
                      type: integer
                      minimum: 1
                      default: 5
                    links:
                      type: object
                      properties:
                        next_url:
                          type: string
                          default: null
                        prev_url:
                          type: string
                          default: null
                    users:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name: 
                            type: string
                          email: 
                            type: string
                            format: email
                          phone:
                            type: string
                          position:
                            type: string
                          position_id:
                            type: integer
                          registration_timestamp:
                            type: integer
                          photo:
                            type: string
                      
        '404':
          description: Page not found
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: Page not found
        '422':
          description: Validation failed
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: Validation failed
                    fails:
                      type: object
    post:
      tags:
        - users
      summary: Post users
      description: User registration request.
      operationId: postUser
      parameters:
        - name: token
          in: header
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/multipart/form-data:
            schema:
              type: object
              properties: 
                name:
                  type: string
                  minLength: 2
                  maxLength: 60
                email:
                  type: string
                  format: email
                  minLength: 2 
                  maxLength: 100
                phone:
                  type: string
                  pattern: '^[\+]{0,1}380([0-9]{9})$'
                position_id:
                  type: integer
                  minimum: 1
                photo: 
                  type: string
                  format: binary 
      responses:
        '200':
          description: New user successfully registered
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: true
                    user_id:
                      type: integer
                    message:
                      type: string
                      default: New user successfully registered.
        '401':
          description: The token expired.
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: The token expired.
        '409':
          description: The token expired.
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: User with this phone or email already exist.
        '422':
          description: The token expired.
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: Validation failed.
                    fails:
                      type: object
  /users/{id}
    get:
      tags:
        - usersByID
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              $ref: '#/components/schemas/User'
        '404':
          description: Page not found
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: The user with the requested identifier does not exist
                    fails:
                      type: object
        '422':
          description: Validation failed
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: Validation failed
                    fails:
                      type: object
  /positions
    get:
      tags:
        - positions
      summary: get positions
      description: Returns a list of positions
      operationId: getPositions
      responses:
        '200':
          description: successful operation
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: true
                    positions:
                      type: array
                      items: 
                        type: object
                        properties:
                          id:
                            type: integer
                          name: 
                            type: string
        '404':
          description: Page not found
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: Page not found
        '422':
          description: Validation failed
          content:
              application/json:
                schema:
                  type: object
                  properties: 
                    success:
                      type: boolean
                      default: false
                    message:
                      type: string
                      default: Positions not found
                
components:
  schemas:
    User:
      type: object
        properties:
                  
    