openapi: 3.0.0
info:
  title: Swagger Users - OpenAPI 3.0
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:3000
paths:
  /:
    get:
      tags:
        - view
      summary: Get view
      operationId: getView
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
  /token:
    get:
      tags:
        - token
      summary: Get token
      operationId: getToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
  /users:
    get:
      tags:
        - users
      summary: Get users
      operationId: getUsers
      parameters:
        - name: page
          in: query
          description: Specify the page that you want to retrieve
          required: true
          style: form
          explode: true
          schema:
            minimum: 1
            type: integer
        - name: offset
          in: query
          description: Specify the missing record number
          required: false
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
        - name: count
          in: query
          description: Specify the amount of items that will be retrieved per page
          required: true
          style: form
          explode: true
          schema:
            maximum: 100
            minimum: 1
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
    post:
      tags:
        - users
      summary: Post users
      description: User registration request.
      operationId: postUser
      parameters:
        - name: token
          in: header
          description: ""
          required: false
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/users_body"
      responses:
        "200":
          description: New user successfully registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
  /users/{id}:
    get:
      tags:
        - usersByID
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
  /positions:
    get:
      tags:
        - positions
      summary: get positions
      description: Returns a list of positions
      operationId: getPositions
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
components:
  schemas:
    inline_response_200:
      type: object
    users_body:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone: 
          type: string
        position_id:
          type: string
        file:
          type: string
          format: binary
          